var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "real", ()=>real
);
parcelHelpers.export(exports, "imag", ()=>imag
);
parcelHelpers.export(exports, "cConj", ()=>cConj
);
parcelHelpers.export(exports, "cMod", ()=>cMod
);
parcelHelpers.export(exports, "cBarMult", ()=>cBarMult
);
parcelHelpers.export(exports, "cAdd", ()=>cAdd
);
parcelHelpers.export(exports, "cSub", ()=>cSub
);
parcelHelpers.export(exports, "cMult", ()=>cMult
);
parcelHelpers.export(exports, "div", ()=>div
);
parcelHelpers.export(exports, "cDiv", ()=>cDiv
);
const real = (a)=>a.x
;
const imag = (a)=>a.y
;
function cConj(a) {
    return {
        x: a.x,
        y: -a.y
    };
}
function cMod(a) {
    return {
        x: Math.sqrt(a.x ** 2 + a.y ** 2),
        y: 0
    };
}
function cBarMult(a) {
    return {
        x: a.x ** 2 + a.y ** 2,
        y: 0
    };
}
function cAdd(a, b) {
    return {
        x: a.x + b.x,
        y: a.y + b.y
    };
}
function cSub(a, b) {
    return {
        x: a.x - b.x,
        y: a.y - b.y
    };
}
function cMult(a, b) {
    return {
        x: a.x * b.x - a.y * b.y,
        y: a.y * b.x + b.y * a.x
    };
}
function div(a, b) {
    return {
        x: a.x / b.x,
        y: a.y / b.x
    };
}
function cDiv(a, b) {
    const divisor = cBarMult(b);
    return {
        x: real(div(cMult(a, cConj(b)), divisor)),
        y: real(div(cBarMult(a), divisor))
    };
}
